import axios from 'axios';

class {
    onCreate() {
        this.state = {
            city: '',
            degr: 0,
            wind: 0,
            clouds: 0,
            pressure: 0,
            humidity: 0,
            show: false,
            err: '',
        }
    }

    updatePage(e) {
        e.preventDefault();
        let cityName = document.getElementById('city').value;
        this.updateWeather(cityName);
    }

    updateWeather(cityName) {
        axios
        .get(this.buildURL(cityName))
        .then(response => {
            this.buildState(response);
        })
        .catch(error => {
            this.state.show = true;
            this.state.err = error.response.status;
        });  
    }

    buildURL(cityName) {
        let apiKey = '';
        return 'https://api.openweathermap.org/data/2.5/weather?q=' + cityName + '&units=metric&appid=' + apiKey;
    }

    buildState(response) {
        this.state = {
            city: response.data.name,
            degr: Math.round(response.data.main.temp),
            wind: response.data.wind.speed,
            clouds: response.data.clouds.all,
            pressure: response.data.main.pressure,
            humidity: response.data.main.humidity,
            show: true,
            err: false,
        }
    }
}

<div class="container">
    <form on-submit("updatePage") class="input-form">
        <input class="input-text" type="text" id="city">
        <input type="submit" value="Send">
    </form>
    <div class="data">
        <if(state.show === true)>
            <if(state.err == '')>
                <div class="city-degr-part">
                    <p class="city-name">${state.city}</p>
                    <p class="degr">${state.degr} Â°C</p>
                </div>
                <div class="secondary-qw">
                    <p>Wind</p>
                    <p>Clouds</p>
                    <p>Pressure</p>
                    <p>Humidity</p>
                </div>
                <div class="secondary-ans">
                    <p>${state.wind} m/s</p>
                    <p>${state.clouds} %</p>
                    <p>${(state.pressure * 0.750062).toFixed(0)} mmHg</p>
                    <p>${state.humidity} %</p>
                </div>
            </if>
            <else>
                <p class="err">Something goes wrong : ${state.err}</p>
            </else>
        </if>
    </div>
</div>
